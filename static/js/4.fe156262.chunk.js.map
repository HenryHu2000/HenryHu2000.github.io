{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","components/board/token/Token.tsx","components/board/column/Column.tsx","components/board/Board.tsx","components/endscreen/EndScreen.tsx","game/useConnectFour.ts","components/startscreen/userconfcard/UserConfCard.tsx","components/startscreen/StartScreen.tsx","connect-four/ConnectFour.tsx"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread2","target","arguments","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","configurable","writable","Token","props","_jsx","className","children","concat","colour","phantom","Column","_useState","useState","_useState2","hovered","setHovered","tokenToColour","token","PlayerType","PlayerOne","gameConfig","playerOneColour","PlayerTwo","playerTwoColour","full","tokens","gameState","boardHeight","showPhantom","onClick","onMouseEnter","onMouseLeave","map","tokenIndex","index","currentPlayer","fill","_","reverse","Board","columns","grid","col","colIndex","placeToken","EndScreen","message","winner","playerOneName","playerTwoName","_jsxs","onSubmit","e","preventDefault","setGameStage","GameStage","Start","resetGame","type","getInitialState","boardWidth","gameStage","useConnectFour","setGameState","stage","_objectSpread","player","switchSide","lastPos","checkRowLength","rowOffset","colOffset","currPos","rowLength","WIN_LENGTH","row","End","updateGameStatus","UserConfCard","updateGameConfig","setGameConfig","playerOne","onChange","values","TokenColour","checked","disabled","disabledColour","StartScreen","Ongoing","App","_useConnectFour","BOARD_WIDTH","BOARD_HEIGHT","_useConnectFour2","Green","Purple","_Fragment"],"mappings":"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","file":"static/js/4.fe156262.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React, {ReactElement} from 'react';\n\nimport {TokenProps} from './types';\nimport './style.scss';\n\nconst Token = (props: TokenProps): ReactElement => (\n  <div className=\"token-wrapper\">\n    <div className={`token ${props.colour ? props.colour : ''} ${props.phantom ? 'phantom' : ''}`} />\n  </div>\n);\n\nexport default Token;\n","import React, {ReactElement, useState} from 'react';\nimport {PlayerType} from '../../../globals';\nimport Token from '../token/Token';\n\nimport {ColumnProps} from './types';\nimport './style.scss';\n\nconst Column = (props: ColumnProps): ReactElement => {\n  const [hovered, setHovered] = useState<boolean>(false);\n\n  const tokenToColour = (token: PlayerType) => {\n    switch (token) {\n    case PlayerType.PlayerOne:\n      return props.gameConfig.playerOneColour;\n    case PlayerType.PlayerTwo:\n      return props.gameConfig.playerTwoColour;\n    default:\n      return undefined;\n    }\n  };\n\n  const full = props.tokens.length >= props.gameState.boardHeight;\n  const showPhantom = hovered && !full;\n\n  return (\n    <div className={`column ${!full ? 'clickable' : ''}`} \n      onClick={!full ? props.onClick : undefined}\n      onMouseEnter={() => {setHovered(true);}}\n      onMouseLeave={() => {setHovered(false);}}\n    >\n      {\n        props.tokens.map((token, tokenIndex: number) =>\n          <Token \n            key={`token-${props.index}-${tokenIndex}`} \n            colour={tokenToColour(token)} \n          />\n        )\n          .concat(\n            showPhantom ? \n              [<Token \n                key={`token-phantom`} \n                colour={tokenToColour(props.gameState.currentPlayer)} \n                phantom={true}\n              />] : []\n          )\n          .concat(\n            Array(props.gameState.boardHeight - props.tokens.length - (showPhantom ? 1 : 0))\n              .fill(undefined)\n              .map((_, tokenIndex: number) => (\n                <Token \n                  key={`token-${props.index}-${tokenIndex + props.tokens.length}`} \n                />\n              ))\n          )\n          .reverse()\n      }\n    </div>\n  );\n};\n\nexport default Column;\n","import React, {ReactElement} from 'react';\nimport {PlayerType} from '../../globals';\nimport Column from './column/Column';\n\nimport {BoardProps} from './types';\nimport './style.scss';\n\nconst Board = (props: BoardProps): ReactElement => {\n  const columns = props.gameState.grid.map((col: PlayerType[], colIndex: number) => (\n    <Column\n      key={`column-${colIndex}`}\n      index={colIndex}\n      tokens={col}\n      gameState={props.gameState}\n      gameConfig={props.gameConfig}\n      onClick={() => props.placeToken(colIndex, props.gameState.currentPlayer)}\n    />\n  ));\n  return (\n    <div className='board'>\n      {columns}\n    </div>\n  );\n};\n\nexport default Board;\n","import React, {FormEvent, ReactElement} from 'react';\nimport {GameStage, PlayerType} from '../../globals';\n\nimport {EndScreenProps} from './types';\nimport './style.scss';\n\nconst EndScreen = (props: EndScreenProps): ReactElement => {\n  const onSubmit = (e: FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n    props.setGameStage(GameStage.Start);\n    props.resetGame();\n  };\n\n  let message = '';\n  if (props.gameState.winner !== undefined) {\n    message = `${\n      props.gameState.winner === PlayerType.PlayerOne \n        ? props.gameConfig.playerOneName \n        : props.gameConfig.playerTwoName \n    } wins!`;\n  } else {\n    message = 'Draw!';\n  }\n  return (\n    <div className='end-screen'>\n      <h1 className='end-message'>{message}</h1>\n      <form onSubmit={onSubmit}>\n        <input type='submit' value='Rematch' />\n      </form>\n    </div>\n  );\n};\n\nexport default EndScreen;\n","import {useState} from 'react';\nimport {GameStage, PlayerType, WIN_LENGTH} from '../globals';\n\nimport {GameState} from './types';\n\nconst updateGameStatus = (gameState: GameState, lastPos: { row: number; col: number })\n  : GameState => {\n  const checkRowLength = (rowOffset: number, colOffset: number): number => {\n    let currPos = {...lastPos};\n    let rowLength = 0;\n    for (; rowLength < WIN_LENGTH - 1; rowLength++) {\n      // Skip the position last placed\n      currPos = {row: currPos.row += rowOffset, col: currPos.col += colOffset};\n      if (gameState.grid[currPos.col] === undefined ||\n        gameState.grid[currPos.col][currPos.row] !== gameState.currentPlayer) {\n        break;\n      }\n    }\n    return rowLength;\n  };\n\n  const isGridFull = (grid: PlayerType[][]): boolean =>\n    grid.filter(tokens => tokens.length < gameState.boardHeight).length === 0;\n\n  if (checkRowLength(-1, -1) + 1 + checkRowLength(1, 1) >= WIN_LENGTH ||\n    checkRowLength(-1, 0) + 1 + checkRowLength(1, 0) >= WIN_LENGTH ||\n    checkRowLength(-1, 1) + 1 + checkRowLength(1, -1) >= WIN_LENGTH ||\n    checkRowLength(0, -1) + 1 + checkRowLength(0, 1) >= WIN_LENGTH) {\n    return {...gameState, gameStage: GameStage.End, winner: gameState.currentPlayer};\n  } else if (isGridFull(gameState.grid)) {\n    return {...gameState, gameStage: GameStage.End, winner: undefined}; // A draw\n  }\n  return gameState;\n};\n\nconst switchSide = (gameState: GameState): GameState => {\n  const getOtherPlayer = (player: PlayerType): PlayerType =>\n    (player === PlayerType.PlayerOne) ? PlayerType.PlayerTwo : PlayerType.PlayerOne;\n  return {...gameState, currentPlayer: getOtherPlayer(gameState.currentPlayer)};\n};\n\nconst getInitialState = (boardWidth: number, boardHeight: number) : GameState => ({\n  grid: new Array(boardWidth).fill([]),\n  boardHeight: boardHeight,\n  currentPlayer: PlayerType.PlayerOne, // Player 1 plays first\n  gameStage: GameStage.Start,\n  winner: undefined\n});\n\nconst useConnectFour = (boardWidth: number, boardHeight: number)\n  : [GameState, \n    (stage: GameStage) => void,\n    (colIndex: number, token: PlayerType) => void,\n    () => void] => {\n  const [gameState, setGameState] \n    = useState<GameState>(getInitialState(boardWidth, boardHeight));\n\n  const setGameStage = (stage: GameStage): void => {\n    setGameState(\n      {\n        ...gameState,\n        gameStage: stage\n      }\n    );\n  };\n\n  const placeToken = (colIndex: number, token: PlayerType): void => {\n    setGameState(\n      switchSide(\n        updateGameStatus({\n          ...gameState,\n          grid: gameState.grid.map((col, index) =>\n            index === colIndex ? col.concat(token) : col\n          )\n        }, {row: gameState.grid[colIndex].length, col: colIndex})\n      )\n    );\n  };\n\n  const resetGame = (): void => {\n    setGameState(getInitialState(boardWidth, boardHeight));\n  };\n\n  return [gameState, setGameStage, placeToken, resetGame];\n};\n\nexport default useConnectFour;\n","import React, {ReactElement} from 'react';\nimport {PlayerType, TokenColour} from '../../../globals';\n\nimport {UserConfCardProps} from './types';\nimport './style.scss';\nimport Token from '../../board/token/Token';\n\nconst UserConfCard = (props: UserConfCardProps): ReactElement => {\n  const updateGameConfig = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    props.setGameConfig(\n      {\n        ...props.gameConfig,\n        [e.target.name]: e.target.value\n      }\n    );\n  };\n  const playerOne = props.player === PlayerType.PlayerOne;\n\n  return (\n    <div className='user-conf-card'>\n      <div className='avatar-wrapper'>\n        <Token \n          colour={\n            playerOne \n              ? props.gameConfig.playerOneColour \n              : props.gameConfig.playerTwoColour\n          }\n        />\n      </div>\n      <label>\n        <input type='text' name={playerOne ? 'playerOneName' : 'playerTwoName'}\n          value={playerOne ? props.gameConfig.playerOneName : props.gameConfig.playerTwoName}\n          onChange={updateGameConfig}\n        />\n      </label>\n      <br />\n      {Object.values(TokenColour).map(colour => \n        (\n          <label className='radio' key={`radio-${props.player}-${colour}`}>\n            <input \n              type='radio' \n              name={playerOne ? 'playerOneColour' : 'playerTwoColour'}\n              value={colour} onChange={updateGameConfig}\n              checked={\n                (playerOne \n                  ? props.gameConfig.playerOneColour \n                  : props.gameConfig.playerTwoColour\n                ) === colour\n              }\n              disabled={colour === props.disabledColour}\n            />\n            {<Token colour={colour}\n              phantom={colour === props.disabledColour}/>}\n          </label>\n        ))}\n    </div>\n  );\n};\n\nexport default UserConfCard;\n","import React, {FormEvent, ReactElement} from 'react';\nimport {GameStage, PlayerType} from '../../globals';\n\nimport {StartScreenProps} from './types';\nimport './style.scss';\nimport UserConfCard from './userconfcard/UserConfCard';\n\nconst StartScreen = (props: StartScreenProps): ReactElement => {\n  const onSubmit = (e: FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n    props.setGameStage(GameStage.Ongoing);\n  };\n\n  return (\n    <div className='start-screen'>\n      <h1>Choose your names and token colours:</h1>\n      <form onSubmit={onSubmit}>\n        <div className='conf-container'>\n          <UserConfCard \n            player={PlayerType.PlayerOne}\n            gameConfig={props.gameConfig}\n            setGameConfig={props.setGameConfig}\n            disabledColour={props.gameConfig.playerTwoColour}\n          />\n          <UserConfCard \n            player={PlayerType.PlayerTwo}\n            gameConfig={props.gameConfig}\n            setGameConfig={props.setGameConfig}\n            disabledColour={props.gameConfig.playerOneColour}\n          />\n        </div>\n        <input type='submit' value='Start' />\n      </form>\n    </div>\n  );\n};\n\nexport default StartScreen;\n","import React, {ReactElement, useState} from 'react';\nimport Board from '../components/board/Board';\nimport EndScreen from '../components/endscreen/EndScreen';\nimport {TokenColour, BOARD_HEIGHT, BOARD_WIDTH, GameStage} from '../globals';\nimport useConnectFour from '../game/useConnectFour';\nimport StartScreen from '../components/startscreen/StartScreen';\nimport {GameConfig} from '../game/types';\n\nconst App = (): ReactElement => {\n  const [gameState, setGameStage, placeToken, resetGame]\n    = useConnectFour(BOARD_WIDTH, BOARD_HEIGHT);\n  const [gameConfig, setGameConfig] = useState<GameConfig>({\n    playerOneName: 'Player 1',\n    playerTwoName: 'Player 2',\n    playerOneColour: TokenColour.Green,\n    playerTwoColour: TokenColour.Purple\n  });\n  return (\n    <div className='App'>\n      {\n        gameState.gameStage === GameStage.Start\n          ? <StartScreen\n            gameState={gameState}\n            gameConfig={gameConfig}\n            setGameStage={setGameStage}\n            setGameConfig={setGameConfig}\n          />\n          : <></>\n      }\n      {\n        gameState.gameStage !== GameStage.Start\n          ? <Board\n            gameState={gameState}\n            gameConfig={gameConfig}\n            placeToken={placeToken}\n          />\n          : <></>\n      }\n      {\n        gameState.gameStage === GameStage.End\n          ? <EndScreen\n            gameState={gameState}\n            setGameStage={setGameStage}\n            resetGame={resetGame}\n            gameConfig={gameConfig}\n          />\n          : <></>\n      }\n    </div>\n  );\n};\n\nexport default App;\n"],"sourceRoot":""}